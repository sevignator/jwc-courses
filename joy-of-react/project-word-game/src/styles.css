/*
  Theme and global variables
*/
@font-face {
  font-family: Source;
  src: url(/fonts/source/SourceSerif4-Regular);
  font-weight: 400;
}
@font-face {
  font-family: Source;
  src: url(/fonts/source/SourceSerif4-Bold.ttf);
  font-weight: 700;
}
@font-face {
  font-family: Source;
  src: url(/fonts/source/SourceSerif4-Black.ttf);
  font-weight: 800;
}

:root {
  overflow-y: scroll;

  --game-spacing: 32px;

  --color-success: hsl(150deg 70% 30%);
  --color-warning: hsl(50deg 100% 30%);
  --color-error: hsl(0deg 70% 45%);
  --color-gray-100: hsl(230deg 30% 15%);
  --color-gray-200: hsl(230deg 25% 20%);
  --color-gray-300: hsl(230deg 20% 25%);
  --color-gray-400: hsl(230deg 15% 20%);
  --color-gray-500: hsl(230deg 10% 50%);
  --color-gray-700: hsl(230deg 5% 80%);
  --color-gray-800: hsl(230deg 5% 90%);
  --color-gray-900: hsl(230deg 0% 100%);

  --time-transition-theme-switch: 200ms;
}

/*
  Custom styles
*/
body {
  font-family: sans-serif;
}

@media (max-height: 600px) {
  body {
    --game-spacing: 8px;
  }
}

button {
  margin: 0;
  padding: 0;
  border: none;
  background: transparent;
  cursor: pointer;
  text-align: left;
  color: inherit;
}

/*
  Modal styles

  HACK: I'm doing this in a quick and dirty way.
  Later in the course, we'll see my preferred way of building
  modals in React.
*/
[data-reach-dialog-content] {
  position: relative;
  border-radius: 8px;
  padding: 24px 32px;
}
.modal-close-btn {
  position: absolute;
  top: 0;
  right: 0;
  padding: 16px;
  cursor: pointer;
}
.modal-title {
  margin-bottom: 0.5em;
}

/*
  Keyframe animations
*/
@keyframes slideUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0%);
  }
}
